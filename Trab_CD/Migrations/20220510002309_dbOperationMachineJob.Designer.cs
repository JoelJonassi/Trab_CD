// <auto-generated />
using JobShopAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobShopAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220510002309_dbOperationMachineJob")]
    partial class dbOperationMachineJob
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobShopAPI.Models.Job", b =>
                {
                    b.Property<int>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJob"), 1L, 1);

                    b.Property<int>("IdOperation")
                        .HasColumnType("int");

                    b.Property<string>("NameJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJob");

                    b.HasIndex("IdOperation");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JobShopAPI.Models.Machine", b =>
                {
                    b.Property<int>("IdMachine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMachine"), 1L, 1);

                    b.Property<string>("MachineÑame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMachine");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("JobShopAPI.Models.Operation", b =>
                {
                    b.Property<int>("IdOperation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperation"), 1L, 1);

                    b.Property<int>("IdMachine")
                        .HasColumnType("int");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("time")
                        .HasColumnType("int");

                    b.HasKey("IdOperation");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("JobShopAPI.Models.Simulation", b =>
                {
                    b.Property<int>("IdSimulation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSimulation"), 1L, 1);

                    b.Property<int>("IdJob")
                        .HasColumnType("int");

                    b.Property<string>("NameSimulation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSimulation");

                    b.HasIndex("IdJob");

                    b.ToTable("Simulations");
                });

            modelBuilder.Entity("JobShopAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MachineOperation", b =>
                {
                    b.Property<int>("IdMachine")
                        .HasColumnType("int");

                    b.Property<int>("IdOperation")
                        .HasColumnType("int");

                    b.HasKey("IdMachine", "IdOperation");

                    b.HasIndex("IdOperation");

                    b.ToTable("MachineOperation");
                });

            modelBuilder.Entity("JobShopAPI.Models.Job", b =>
                {
                    b.HasOne("JobShopAPI.Models.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("IdOperation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("JobShopAPI.Models.Simulation", b =>
                {
                    b.HasOne("JobShopAPI.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("IdJob")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("MachineOperation", b =>
                {
                    b.HasOne("JobShopAPI.Models.Operation", null)
                        .WithMany()
                        .HasForeignKey("IdMachine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobShopAPI.Models.Machine", null)
                        .WithMany()
                        .HasForeignKey("IdOperation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
